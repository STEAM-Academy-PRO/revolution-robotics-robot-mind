#!/bin/bash

python -m dev_tools.create_package --dev

# This is the version that it will be mapped to.
VERSION="0.1.$(git rev-list --count HEAD)"

# Define source and destination folders
LOCAL_SOURCE_FOLDER="./"
USER="pi"

# If your local network does not have Bonjour service OR
# you have multiple devices on the network,
# just modify the target variable in .vscode/settings.json

# Check if 'settings.json' exists
if [ ! -f ".vscode/settings.json" ]; then
    # If not, copy 'settings.example.json' to it's place
    cp ".vscode/settings.example.json" ".vscode/settings.json"
    echo "Looks like first run, copied vscode settings.example to settings!"
fi

HOST="$(jq -r '.target' .vscode/settings.json)"
REMOTE_DESTINATION_FOLDER="/home/pi/RevvyFramework/user/packages/"

PACKAGE_FILENAME="pi-firmware-$VERSION"
TARGET_FOLDER_NAME="revvy-$VERSION"
PACKAGE_SOURCE="install/$PACKAGE_FILENAME.tar.gz"

# Production directory
TARGET="/home/pi/RevvyFramework/user/packages/$TARGET_FOLDER_NAME/"

DEBUG_PORT=5678


echo "Deploying to: $USER@$HOST:$TARGET"

# Prod deploy: just start running, do not wait for debugger.
RUNNER="cd $TARGET && python3 -u ./revvy.py"

# For debug mode, run ./debug 1
if [ "$#" -ge 1 ] && [ "$1" -eq 1 ]; then
    RUNNER="cd $TARGET && python3 -u -m debugpy --listen 0.0.0.0:$DEBUG_PORT --wait-for-client ./revvy.py"
fi

ssh $USER@$HOST "mkdir -p $TARGET && tar -xzf - -C $TARGET --warning=no-timestamp && \
    stop; killall python3; echo "PI: Files extracted to target folder."" < $PACKAGE_SOURCE


echo ""
echo "---------------------------------------------------------------"
echo ""

# On debug, just wait until the port is open, then end script!
if [ "$#" -ge 1 ] && [ "$1" -eq 1 ]; then
    echo "Waiting for Debugger to connect on $HOST:$DEBUG_PORT" && \
    echo "Launch the 'Attach PI Debugger in VSCode!'"
fi

### Start the deployed script!
ssh $USER@$HOST "$RUNNER"

